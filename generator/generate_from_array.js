fs = require('fs');

function touchDir(dir) {
	if (!fs.existsSync(dir)){
		fs.mkdirSync(dir);
		return true
	} else {
		return false
	}
}



function allPossibleCombinations(input, length, curstr) {
    if(curstr.length == length) return [ curstr ];
    var ret = [];
    for(var i = 0; i < input.length; i++) {
        ret.push.apply(ret, allPossibleCombinations(input, length, curstr + input[i]));
    }
    return ret;
}

// return a dict filled with example data
function generateExampleDict() {
	let input = [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' ]
	// let input = [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o' ]
	let combArray = allPossibleCombinations(input, 3, '')
	
	var data = {}; // create an empty array
	
	combArray.forEach(element => {
		data[element] = "This_is_an_example_value_for_key_" + element
	});

	return data
}

const noop = () => {};




var dir = __dirname + '/../dist';
if (touchDir(dir) == false) {
	console.log("The /dist folder already exist, please delete it.")
	process.exit(1)
}

touchDir(dir + '/data')

fs.copyFile( __dirname + '/../viewer/example.html', dir + '/index.html', (err) => {
	if (err) throw err;
	console.log('example.html was copied to index.html');
});

fs.copyFile(__dirname + '/../viewer/lookup.js', dir + '/lookup.js', (err) => {
	if (err) throw err;
	console.log('source.txt was copied to destination.txt');
});



console.log('gen_s')
let data = generateExampleDict()
console.log('gen fin')
var indexFileContent = 'index # example data generated by SkyLookup\n'
var linesInFile = 0
var contentToWrite = 'final #\n'
var nextFileName = 0
var firstLineInFile = ''

for (var key in data) {
	if (linesInFile < 1000) {
		contentToWrite += key + ' ' + data[key] + '\n'
		if (linesInFile == 0) {
			firstLineInFile = key
		}
		linesInFile += 1
	} else {
		fs.writeFile(dir + '/data/' + nextFileName + '.txt', contentToWrite, noop)
		console.log('writing ' + nextFileName)
		linesInFile = 0
		contentToWrite = 'final #\n'
		nextFileName += 1
		indexFileContent += firstLineInFile + ' data/' + nextFileName + '.txt\n'
		firstLineInFile = ''
	}
}
// WRITE indexFileContent

fs.writeFile(dir + '/data/index.txt', indexFileContent, noop)
console.log('writing index file')



// fs.writeFile('', data, [encoding], [callback])